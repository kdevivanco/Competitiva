# def get_position_map():
#     keypad = [
#         ['1', '2', '3'], 
#         ['4', '5', '6'], 
#         ['7', '8', '9'], 
#         ['', '0', '']
#     ]
#     position_map = {}
    
#     for i in range(4):
#         for j in range(3):
#             if keypad[i][j] != '':
#                 position_map[keypad[i][j]] = (i, j)
    
#     return position_map

# def find_closest_valid_digit(prev_pos, current_char, position_map):
#     # Buscar el dígito válido más cercano
#     closest_digit = current_char
#     min_diff = float('inf')
    
#     for digit in position_map.keys():
#         next_pos = position_map[digit]
        
#         if next_pos[0] >= prev_pos[0] and next_pos[1] >= prev_pos[1]:
#             diff = abs(int(digit) - int(current_char))
#             if diff < min_diff:
#                 min_diff = diff
#                 closest_digit = digit
                
#     return closest_digit

# def adjust_sequence(sequence, position_map):
#     result = sequence[0]
    
#     for i in range(1, len(sequence)):
#         prev_char = result[-1]
#         current_char = sequence[i]
        
#         prev_pos = position_map[prev_char]
#         current_pos = position_map[current_char]
        
#         # Si el movimiento no es válido (no se mueve hacia la derecha o hacia abajo)
#         if current_pos[0] < prev_pos[0] or current_pos[1] < prev_pos[1]:
#             # Encontrar el dígito más cercano que sea válido
#             closest_digit = find_closest_valid_digit(prev_pos, current_char, position_map)
#             result += closest_digit
#         else:
#             result += current_char
    
#     return result
# rep=[]
# def main():
#     position_map = get_position_map()
#     for _ in range(1,201):
#         sequence = str(_)
#         adjusted_sequence = adjust_sequence(sequence, position_map)
#         rep.append(int(adjusted_sequence))
#     print(rep)
# if __name__ == "__main__":
#     main()






map_numbers = {
    "1": "1", "2": "2", "3": "3", "4": "4", "5": "5", "6": "6", "7": "7", "8": "8", "9": "9",
    "10": "10", "11": "11", "12": "12", "13": "13", "14": "14", "15": "15", "16": "16", "17": "17", "18": "18", "19": "19",
    "20": "20", "21": "22", "22": "22", "23": "23", "24": "25", "25": "25", "26": "26", "27": "28", "28": "28", "29": "29",
    "30": "29", "31": "33", "32": "33", "33": "33", "34": "33", "35": "36", "36": "36", "37": "36", "38": "39", "39": "39",
    "40": "40", "41": "40", "42": "44", "43": "44", "44": "44", "45": "45", "46": "46", "47": "47", "48": "48", "49": "49",
    "50": "50", "51": "50", "52": "50", "53": "55", "54": "55", "55": "55", "56": "56", "57": "58", "58": "58", "59": "59",
    "60": "59", "61": "59", "62": "59", "63": "66", "64": "66", "65": "66", "66": "66", "67": "66", "68": "69", "69": "69",
    "70": "70", "71": "70", "72": "70", "73": "70", "74": "77", "75": "77", "76": "77", "77": "77", "78": "78", "79": "79",
    "80": "80", "81": "80", "82": "80", "83": "80", "84": "88", "85": "88", "86": "88", "87": "88", "88": "88", "89": "89",
    "90": "89", "91": "89", "92": "89", "93": "89", "94": "99", "95": "99", "96": "99", "97": "99", "98": "99", "99": "99",
    "100": "100", "101": "100", "102": "100", "103": "100", "104": "100", "105": "110", "106": "110", "107": "110", "108": "110", "109": "110",
    "110": "110", "111": "111", "112": "112", "113": "113", "114": "114", "115": "115", "116": "116", "117": "117", "118": "118", "119": "119",
    "120": "120", "121": "122", "122": "122", "123": "123", "124": "125", "125": "125", "126": "126", "127": "128", "128": "128", "129": "129",
    "130": "129", "131": "133", "132": "133", "133": "133", "134": "133", "135": "136", "136": "136", "137": "136", "138": "139", "139": "139",
    "140": "140", "141": "140", "142": "144", "143": "144", "144": "144", "145": "145", "146": "146", "147": "147", "148": "148", "149": "149",
    "150": "150", "151": "150", "152": "150", "153": "155", "154": "155", "155": "155", "156": "156", "157": "158", "158": "158", "159": "159",
    "160": "159", "161": "159", "162": "159", "163": "166", "164": "166", "165": "166", "166": "166", "167": "166", "168": "169", "169": "169",
    "170": "170", "171": "170", "172": "170", "173": "170", "174": "177", "175": "177", "176": "177", "177": "177", "178": "178", "179": "179",
    "180": "180", "181": "180", "182": "180", "183": "180", "184": "188", "185": "188", "186": "188", "187": "188", "188": "188", "189": "189",
    "190": "189", "191": "189", "192": "189", "193": "189", "194": "199", "195": "199", "196": "199", "197": "199", "198": "199", "199": "199",
    "200": "200"}


test_cases = int(input())
for i in range(test_cases):
    number = input()
    print(map_numbers[number])
